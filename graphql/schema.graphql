"A datetime string with format `Y-m-d H:i:s`, e.g. `2018-05-23 13:43:32`."
scalar DateTime @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\DateTime")

"Account of a person who utilizes this application."
type User {
    "Unique primary key."
    id: ID!

    "Non-unique name."
    name: String!

    "Unique email address."
    email: String!

    "When the email was verified."
    email_verified_at: DateTime

    "When the account was created."
    created_at: DateTime!

    "When the account was last updated."
    updated_at: DateTime
}


type Category{
    id: ID!
    name: String!
    description: String
    children: [Category]!
}


type Product{

    id: ID!
    name: String!
    description: String!
    price: Float!
    category_id: ID!
    image_url: String!
    created_at: DateTime!
}


type UserResponse{
    user: User
    message: String
    errors: [Error]!
}

type Error{
    field: String
    message: String
}



type VerifyEmailPayload{
    success: Boolean!
    message: String!
}



type Query{
    listCategories: [Category]! @field(resolver: "App\\GraphQL\\Queries\\ListCategories@resolve")

    products(
        search: String
        sort:String
        category_id: ID
        page: Int
        count: Int
    ): [Product]! @field(resolver: "App\\GraphQL\\Queries\\ListProducts@resolve")

}




type Mutation {
    registerUser(
        name: String!
        email: String!
        password: String!
        password_confirmation: String!
    ): UserResponse @field(resolver:"App\\GraphQL\\Mutations\\RegisterUser@resolve")

    verifyEmail(
        token: String!
    ): VerifyEmailPayload  @field(resolver:"App\\GraphQL\\Mutations\\VerifyEmail@resolve")
}


